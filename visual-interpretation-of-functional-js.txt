Visual Interpretation of Functional Javascript
==========================================================================================================
Retrieve id, title, and a 150x200 box art url for every video:

// Create a prototype method 'concatAll' for later use.
Array.prototype.concatAll = function() {
	var results = [];
	this.forEach(function(subArray) {
    subArray.forEach(function(element){
    	results.push(element);
    });
  });
	return results;
};

// Our data
var movieLists = [
			{
				name: "Instant Queue",
				videos : [
					{
						"id": 70111470,
						"title": "Die Hard",
						"boxarts": [
							{ width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/DieHard150.jpg" },
							{ width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/DieHard200.jpg" }
						],
						"url": "http://api.netflix.com/catalog/titles/movies/70111470",
						"rating": 4.0,
						"bookmark": []
					},
					{
						"id": 654356453,
						"title": "Bad Boys",
						"boxarts": [
							{ width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/BadBoys200.jpg" },
							{ width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/BadBoys150.jpg" }

						],
						"url": "http://api.netflix.com/catalog/titles/movies/70111470",
						"rating": 5.0,
						"bookmark": [{ id:432534, time:65876586 }]
					}
				]
			},
			{
				name: "New Releases",
				videos: [
					{
						"id": 65432445,
						"title": "The Chamber",
						"boxarts": [
							{ width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/TheChamber150.jpg" },
							{ width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/TheChamber200.jpg" }
						],
						"url": "http://api.netflix.com/catalog/titles/movies/70111470",
						"rating": 4.0,
						"bookmark": []
					},
					{
						"id": 675465,
						"title": "Fracture",
						"boxarts": [
							{ width: 200, height:200, url:"http://cdn-0.nflximg.com/images/2891/Fracture200.jpg" },
							{ width: 150, height:200, url:"http://cdn-0.nflximg.com/images/2891/Fracture150.jpg" },
							{ width: 300, height:200, url:"http://cdn-0.nflximg.com/images/2891/Fracture300.jpg" }
						],
						"url": "http://api.netflix.com/catalog/titles/movies/70111470",
						"rating": 5.0,
						"bookmark": [{ id:432534, time:65876586 }]
					}
				]
			}
		];

var boxArts = function(array) {
	return movieLists.map(function(movieList){ 				// Lv 1
		return movieList.videos.map(function(video){		// Lv 2
			return video.boxarts.filter(function(boxart){ // Lv 3
				return boxart.width === 150;								// End of selection
			}).map(function(boxart){
				return {id: video.id, title: video.title, boxart: boxart.url}; // Rendering with map
			});
		});
	});
};

boxArts(movieLists);

==========================================================================================================
Visual Interpretation:
==========================================================================================================
Lv 1

[ [ {movieList} , {movieList} ], [ {movieList} , {movieList} ] ]

==========================================================================================================
return movieLists.map(function(movieList){
	return movieList.videos;
});
==========================================================================================================
Lv 2

[ [ [ {video}, {video} ], [ {video}, {video} ] ], [ [ {video}, {video} ], [ {video}, {video} ] ]

==========================================================================================================
return movieLists.map(function(movieList){
	return movieList.videos.map(function(video){
		return video.boxarts;
	});
});
==========================================================================================================
Lv 3 

[ [ [ {boxart} ], [ {boxart} ] ], [ [ {boxart} ], [ {boxart} ] ] ]

==========================================================================================================
return movieLists.map(function(movieList){
	return movieList.videos.map(function(video){
		return video.boxarts.filter(function(boxart){
			return boxart.width === 150;
		});
	});
});

==========================================================================================================
Rendering // Looks same as Lv 3 because only {boxart}'s template will differ.

[ [ [ {boxart} ], [ {boxart} ] ], [ [ {boxart} ], [ {boxart} ] ] ]

==========================================================================================================
return movieLists.map(function(movieList){
	return movieList.videos.map(function(video){
		return video.boxarts.filter(function(boxart){
			return boxart.width === 150;
		}).map(function(boxart){
			return {id: video.id, title: video.title, boxart: boxart.url};
		});
	});
});
==========================================================================================================
Applying 'concatAll' twice // concats nested arrays.

[ {boxart}, {boxart}, {boxart}, {boxart} ]

==========================================================================================================
return movieLists.map(function(movieList){
	return movieList.videos.map(function(video){
		return video.boxarts.filter(function(boxart){
			return boxart.width === 150;
		}).map(function(boxart){
			return {id: video.id, title: video.title, boxart: boxart.url};
		});
	}).concatAll();
}).concatAll();
